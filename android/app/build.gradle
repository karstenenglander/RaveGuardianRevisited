// Apply only the necessary Gradle plugins for React Native (No Firebase for now)
plugins {
    id("com.android.application")        // Standard Android application plugin
    id("org.jetbrains.kotlin.android")    // Kotlin plugin for Android
    id("com.facebook.react")              // React Native Gradle plugin
    // id("com.google.gms.google-services")  // Firebase Plugin (Commented out for now)
}

// Define the project root path
def projectRoot = rootDir.getAbsoluteFile().getParentFile().getAbsolutePath()

/**
 * React Native project configuration.
 * Firebase & extra dependencies are commented out to isolate build issues.
 */
react {
    entryFile = file(["node", "-e", "require('expo/scripts/resolveAppEntry')", projectRoot, "android", "absolute"].execute(null, rootDir).text.trim())
    reactNativeDir = new File(["node", "--print", "require.resolve('react-native/package.json')"].execute(null, rootDir).text.trim()).getParentFile().getAbsoluteFile()
    hermesCommand = new File(["node", "--print", "require.resolve('react-native/package.json')"].execute(null, rootDir).text.trim()).getParentFile().getAbsolutePath() + "/sdks/hermesc/%OS-BIN%/hermesc"
    codegenDir = new File(["node", "--print", "require.resolve('@react-native/codegen/package.json', { paths: [require.resolve('react-native/package.json')] })"].execute(null, rootDir).text.trim()).getParentFile().getAbsoluteFile()

    autolinkLibrariesWithApp() // Automatically links native dependencies
}

// Basic Android configurations (No Firebase Yet)
android {
    ndkVersion rootProject.ext.ndkVersion // Native Development Kit (NDK) version
    buildToolsVersion rootProject.ext.buildToolsVersion // Android Build Tools version
    compileSdk rootProject.ext.compileSdkVersion       // The Android API level to compile against

    namespace "com.anonymous.RaveGuardianRevisited" // Package name for the app
    defaultConfig {
        applicationId 'com.anonymous.RaveGuardianRevisited' // Unique app ID
        minSdkVersion rootProject.ext.minSdkVersion // Minimum Android version supported
        targetSdkVersion rootProject.ext.targetSdkVersion // Target Android version
        versionCode 1  // App version code
        versionName "1.0.0" // App version name
    }

    // Configure signing keys for development
    signingConfigs {
        debug {
            storeFile file('debug.keystore') // Default debug keystore
            storePassword 'android'
            keyAlias 'androiddebugkey'
            keyPassword 'android'
        }
    }

    // Configure build types
    buildTypes {
        debug {
            signingConfig signingConfigs.debug
        }
        release {
            signingConfig signingConfigs.debug
            shrinkResources false // Keep resources intact
            minifyEnabled false // Disable Proguard for now
            proguardFiles getDefaultProguardFile("proguard-android.txt"), "proguard-rules.pro"
        }
    }

    // Packaging options
    packagingOptions {
        jniLibs {
            useLegacyPackaging (findProperty('expo.useLegacyPackaging')?.toBoolean() ?: false)
        }
    }
    androidResources {
        ignoreAssetsPattern '!.svn:!.git:!.ds_store:!*.scc:!CVS:!thumbs.db:!picasa.ini:!*~'
    }
}

// Dependencies section - Only the essentials (No Firebase yet)
dependencies {
    // The version of react-native is set by the React Native Gradle Plugin
    implementation("com.facebook.react:react-android")

    // JavaScript Engine for React Native (Hermes)
    if (hermesEnabled.toBoolean()) {
        implementation("com.facebook.react:hermes-android")
    } else {
        implementation 'org.webkit:android-jsc:+'  // JavaScriptCore Engine
    }
}  // Ensure this is the final closing bracket
